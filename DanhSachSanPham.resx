<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBoLoc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABOBJREFUWEftlm1MW1UYxw/LxCXLpoPZfUCF8U7fiyYm+sHoolmMXwhbHAOmozBk
        jBdZJH4wkk3UqTFGY9QYFxOJTIbIS0vbCy2FlbcxYFAmBmPccFOgvbctiZo5Qx+fc+8pUGFYSsen/ZN/
        DrfP4Zzffc7znJbc1Z2UyuHbJT8P0ewxSBqOf1Zj4S3sMbJ61DafprN6q3U2T1dmp/e6zur5Gw26Tg9o
        OwWPlhPs2g7PG6pOj4oARKk5fkzDCaA2eXVsiY1LaxMe19m8jkybFzKtXkAgdAAC3SFZQ42biwAWYQhN
        R1CbhVq2VPjS2L33Z9o8jSIEOhQIzRLALJqOoDTzU2zJ8KSz+5IRYHItCBHkvxBolVn4k0KozDyoTJIz
        zIKCLb0+aTvmU7AueAkCHYCg5gS/hvMM4eansSb0agufrbZ4SnDjd9QmYUQCcLsDEErqdrSRr2HLhy56
        NFqr98cAxFI2hAWE+EZh8iWxqatKaXK/tghCISQQUBhcn7ApoQs3bwyGoEfh8WH697Mpt9WTdtiKmfgp
        AKEw8n/JDa4mebv7cLz96jY2LTTh2T+xHIIaj8Cn5gQlm7KmMoyeeIT4TWl0fys3zB1QczPbWWj9QgjH
        UmFS8wuhZCTiokUrQoggUoeoLHwdC2+ucPPqAITYpmbe/3/FeseELdoddFeYhIsstPnCTEyLIIuXlfs0
        C22y8EsN74Vby29MhYnXs2iEBFGkfExJyp2PkJIR9FAiCwQr8f0x2eJFxS6rxLNXS1g4Mnpl4ilS4QQE
        AnJ8BEjxwC2Sx63S+jWwRWmYW3ZjumHPu85PWTQyqnQek2DGgZRSmItAykz3smiw0uqn/6EQCmbZmfE2
        FoqMKpxvBWWmaIBnkZVK/PwHrwhicIMcvefM+A0WiowqJ4ZFmDIKMwyksL+LRVbqwTf7jRRC3iY57sMr
        QPLsySy8MVWNpZKKcb8Ic+IykJJLQPR9J1l0pWTVlmckEBdktLogqW4aSI6lnoU3psqJ84tHROvl5SEg
        L3WnsOjqSvhs0kdBMlpckI6O1nf4Sb7tORYOT+UTzwdnhR7RQDeL3l6yaltRerMEkt48B7tP4T8etvjw
        LVRsyvpU7lQjyLxUKwhCa6V40E+OXniMzVhbD38w+msagqR9PwfJ527AlhwTYHYQqHd9GZIyMi+2sgjC
        jqegN/Sj31XV89DeL3++SWFSm+Yg5nW8D15oB3LE5id6xzlyvH/topaKtQHrwy92zolRKSMURN93heQO
        7mQzQ1NsuWlfUt21hdTvZiG54XfYpucQCDN0pAvf7IKfFPVfwsVrSelwIRZkNtZCEW5ai+MwKRv1i7VR
        SiEwG7RzigcRpNeFLxTer4DYSu7p+C+mbqY0zkLCV9dga45BylC+DTuhB4uwD8gx3IS+Md2QFibNADV9
        pp9TiMJ+IEd7pkiuLY0tHZ5iiq1xce+NTic3zEDC2V8gOh9hDrRhUWOmaJYoVIFDAivCTQOmz/pehOjG
        buyqJwUtO9iSG9fuKmth3MeTvr1fX4f7XnVAVFYLkIOYqUNmILmdUrYo3It2HKnx71xrNznEhdY14Si2
        qmPfA6eGDLK3L8/sqOz54548I5CsZiDZrZgxA49Z68LxJDnYGpmbez2KqTHt3J7VJCP7P1r92/euNixC
        /gWJm59k4DIo2wAAAABJRU5ErkJggg==
</value>
  </data>
</root>