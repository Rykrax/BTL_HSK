<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBoLoc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>